services:
  jenkins:
    image: jenkins/jenkins:2.504.3-lts
    container_name: jenkins
    restart: unless-stopped
    networks:
      - "{{ docker_network }}"
    volumes:
      - jenkins_data:/var/jenkins_home
    environment:
      - JENKINS_OPTS="--httpPort={{ services.jenkins.port }}"
    deploy:
      resources:
        limits:
          cpus: "{{ services.jenkins.cpu_limit }}"
          memory: "{{ services.jenkins.memory_limit }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.rule=Host(`{{ subdomains.jenkins }}`)"
      - "traefik.http.routers.jenkins.entrypoints=websecure"
      - "traefik.http.routers.jenkins.tls.certresolver=letsencrypt"
      - "traefik.http.services.jenkins.loadbalancer.server.port={{ services.jenkins.port }}"

  mattermost:
    image: mattermost/mattermost-team-edition:10.9.1
    container_name: mattermost
    restart: unless-stopped
    networks:
      - "{{ docker_network }}"
    volumes:
      - "{{ config_dir }}/mattermost/config.json:/mattermost/config/config.json:rw"
      - mattermost_data:/mattermost/data
      - mattermost_logs:/mattermost/logs
      - mattermost_plugins:/mattermost/plugins
      - mattermost_client_plugins:/mattermost/client/plugins
    user: "2000:2000"
    deploy:
      resources:
        limits:
          cpus: "{{ services.mattermost.cpu_limit }}"
          memory: "{{ services.mattermost.memory_limit }}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mattermost.rule=Host(`{{ subdomains.mattermost }}`)"
      - "traefik.http.routers.mattermost.entrypoints=websecure"
      - "traefik.http.routers.mattermost.tls.certresolver=letsencrypt"
      - "traefik.http.services.mattermost.loadbalancer.server.port={{ services.mattermost.port }}"
    depends_on:
      - postgres

  postgres:
    image: postgres:17.5-alpine
    container_name: postgres
    restart: unless-stopped
    networks:
      - "{{ docker_network }}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD={{ postgres_admin_password }}
      - POSTGRES_DB=mattermost
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512m"

networks:
  "{{ docker_network }}":
    external: true

volumes:
  jenkins_data:
  mattermost_data:
  mattermost_logs:
  mattermost_plugins:
  mattermost_client_plugins:
  postgres_data:
