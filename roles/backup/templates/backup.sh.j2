#!/bin/bash
set -euo pipefail

# Configuration
BACKUP_DIR="/opt/backups"
RETENTION_DAYS={{ backup_retention_days }}
TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
BACKUP_FILE="$BACKUP_DIR/nusatech-devops-backup-$TIMESTAMP.tar.gz"

# List of all named volumes used by the services
VOLUMES=(
  "traefik_data"
  "prometheus_data"
  "grafana_data"
  "loki_data"
  "alertmanager_data"
  "jenkins_data"
  "mattermost_data"
  "mattermost_logs"
  "mattermost_plugins"
  "mattermost_client_plugins"
  "postgres_data"
)

echo "Starting backup of Nusatech DevOps stack..."

# Create a temporary directory to stage volume data
STAGING_DIR=$(mktemp -d)
trap 'rm -rf -- "$STAGING_DIR"' EXIT

# Backup each volume
for volume in "${VOLUMES[@]}"; do
  echo "Backing up volume: $volume"
  docker run --rm \
    -v "${volume}:/data:ro" \
    -v "${STAGING_DIR}:/backup" \
    alpine \
    tar -czf "/backup/${volume}.tar.gz" -C /data .
done

# Backup configuration files
echo "Backing up configuration files..."
tar -czf "${STAGING_DIR}/configs.tar.gz" -C "{{ base_dir }}" .

# Create the final backup archive
echo "Creating final archive: $BACKUP_FILE"
tar -czf "$BACKUP_FILE" -C "$STAGING_DIR" .

# Clean up old backups
echo "Cleaning up old backups (older than $RETENTION_DAYS days)..."
find "$BACKUP_DIR" -type f -name "*.tar.gz" -mtime +$RETENTION_DAYS -delete

echo "Backup completed successfully!"
